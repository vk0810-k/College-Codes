print("Mom won the lottery")
} else {
print("Better luck next time")
}
input <- c(1,2,3,4,5,6)
lottery <- sample(1:10,6,replace = F)
wrongGuesses <- length(setdiff(lottery,input))
if(wrongGuesses == 0)
{
print("Mom won the lottery")
} else {
print("Better luck next time")
}
input <- c(1,2,3,4,5,6)
lottery <- sample(1:10,6,replace = F)
wrongGuesses <- length(setdiff(lottery,input))
if(wrongGuesses == 0)
{
print("Mom won the lottery")
} else {
print("Better luck next time")
}
input <- c(1,2,3,4,5,6)
lottery <- sample(1:10,6,replace = F)
wrongGuesses <- length(setdiff(lottery,input))
if(wrongGuesses == 0)
{
print("Mom won the lottery")
} else {
print("Better luck next time")
}
input <- c(1,2,3,4,5,6)
lottery <- sample(1:10,6,replace = F)
wrongGuesses <- length(setdiff(lottery,input))
if(wrongGuesses == 0)
{
print("Mom won the lottery")
} else {
print("Better luck next time")
}
input <- c(1,2,3,4,5,6)
lottery <- sample(1:10,6,replace = F)
wrongGuesses <- length(setdiff(lottery,input))
if(wrongGuesses == 0)
{
print("Mom won the lottery")
} else {
print("Better luck next time")
}
input <- c(1,2,3,4,5,6)
lottery <- sample(1:10,6,replace = F)
wrongGuesses <- length(setdiff(lottery,input))
if(wrongGuesses == 0)
{
print("Mom won the lottery")
} else {
print("Better luck next time")
}
n <- 10
sum <- 0
for(i in 1:n){
sum <- sum + i
print(sum)
}
n <- -12
whwhile (n<0) {
print(paste("The number is =",n))
n = n+1
}
n <- -12
while (n<0) {
print(paste("The number is =",n))
n <- n+1
}
n <- 1
sum <- 0
while (n<25) {
sum <- sum + n
print(paste("The sum is =",sum))
}
n <- 10
i <- 1
sum <- 0
while (i <= n) {
sum <- sum + i
i <- i+1
print(paste("The sum is =",sum))
}
eg.na <- c(NA,1:10)
eg.na
mean(eg.na)
mean(eg.na,na.rm = T)
is.na(eg.na)
library(tidyverse)
star <- starwars
star
view(star)
filter(star,species == "Droid")
filter(star,species == "Droid",homeworld == "Tatooine")
star <- mutate(star, bmi = mass/((height/100)^2))
star
view(star)
select(star,name : bmi)
star.trans <- transmute(star,bmi2 = mass/((height/100)^2))
star.trans
arrange(star,mass)
arrange(star,desc(mass))
summarize(star,avg.height = mean(height,na.rm = T))
library(tidyverse)
star <- starwars
star
view(star)
filter(star,species == "Droid")
filter(star,species == "Droid",homeworld == "Tatooine")
star <- mutate(star, bmi = mass/((height/100)^2))
star
view(star)
select(star,name : bmi)
star.trans <- transmute(star,bmi2 = mass/((height/100)^2))
star.trans
arrange(star,mass)
arrange(star,desc(mass))
summarize(star,avg.height = mean(height,na.rm = T))
star.species <- group_by(star,species)
summarise(star.species,avg.height = mean(height,na.rm = T))
sample_n(star,10)
sample_frac(star,0.1)
#PIPE function %>%
star %>%
group_by(species)%>%
summarise(count = n(),mass = mean(mass,na.rm = T))
#PIPE function %>%
star %>%
group_by(species)%>%
summarise(count = n(),mass = mean(mass,na.rm = T)) %>%
filter(count>1)
employee.data <- read.csv("G:\R PRAC UDEMY\employee_data.csv",skip = 23, stringsAsFactors = F)
employee.data <- as.tibble(employee.data)
employee.data$gender <- as.factor(employee.data$gender)
employee.data <- read.csv("G:\R PRAC UDEMY\employee_data.csv",skip = 23, stringsAsFactors = F)
employee.data <- as.tibble(employee.data)
employee.data$gender <- as.factor(employee.data$gender)
employee.data$title <- as.factor(employee.data$title)
any(is.na(employee.data))
employee.a <- employee.data %>%
select(ends_with("name"), gender, everything()) %>%
filter(salary >= 70000) %>%
arrange(gender, last_name)
good.earners <- employee.a["emp_no"]
employee.b <- employee.data %>%
group_by(title, gender) %>%
summarise(avg.salary = mean(salary)) %>%
mutate(monthly = avg.salary/12) %>%
arrange(gender, desc(monthly))
emplyee.data <- read.csv("G:\R PRAC UDEMY\employee_data.csv",skip = 23, stringsAsFactors = F)
emplyee.data <- read.csv("G:/R PRAC UDEMY/employee_data.csv",skip = 23, stringsAsFactors = F)
emplyee.data <- as.tibble(employee.data)
billboard %>% gather(x1st.week:x76th.week,key = "WEEK",value = "rank",na.rm = T)
library(tidyverse)
billboard <- read.csv("G:/R PRAC UDEMY/empdata.csv",skip = 23)
billboard <- as_tibble(billboard)
billboard
billboard %>% gather(x1st.week:x76th.week,key = "WEEK",value = "rank",na.rm = T)
bar <- ggplot(df,aes(x = Survived,fill = "Survived"))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",title = "Survival Rate on the TITANIC")
bar <- ggplot(df,aes(x = Survived,fill = "Survived"))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",title = "Survival Rate on the TITANIC")
library(tidyverse)
hdi <- read.csv("G:/R PRAC UDEMY/hdi-cpi.csv",stringsAsFactors = F)
hdi <- as.tibble(hdi)
hdi
sc <- ggplot(hdi)
sc
sc <- ggplot(hdi,aes(CPI.2015,HDI.2015))
sc
sc+geom_point(aes(color = Region),size = 3) + stat_smooth() + theme_minimal()
#histogram using ggplot2
df <- read.csv("G:/R PRAC UDEMY/titanic.csv",stringsAsFactors = F)
df <- as.tibble(df)
df$Survived <- as.factor(df$Survived)
df$Pclass <- as.factor(df$Pclass)
df$Sex <- as.factor(df$Sex)
df$Embarked <- as.factor(df$Embarked)
df
hist <- ggplot(data = df,aes(x = Age))
hist + geom_histogram(binwidth = 5,color = "darkslategray",
fill = "darkslategray4",alpha = 0.5) +
ggtitle("Age distribution on the titanic") +
labs(x = "Age",y = "Number of passengers") +
theme_minimal()
library(tidyverse)
install.packages("ggthemes")
library(ggthemes)
emp <- read.csv("employee-data.csv", skip = 23, stringsAsFactors = FALSE)
emp <- as.tibble(emp)
emp$gender <- as.factor(emp$gender)
emp$title <- as.factor(emp$title)
emp.a <- filter(emp, salary > 45000)
hist <- ggplot(emp.a, aes(salary))
hist + geom_histogram(binwidth = 5000, color = "darkslategray",
fill = "darkseagreen2", alpha = 0.7) +
labs(title = "Salary distribution in the employee data",
x = "Salary", y = "Number of employees in the salary bracket") +
theme_solarized_2(light = FALSE, base_size = 15, base_family = "serif")
bar <- ggplot(df,aes(x = Survived,fill = "Survived"))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",title = "Survival Rate on the TITANIC")
bar <- ggplot(df,aes(x = Survived,fill = Survived))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",title = "Survival Rate on the TITANIC")
bar <- ggplot(df,aes(x = Survived,fill = Sex))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",title = "Survival Rate on the TITANIC")
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",
x = "Gender",
title = "Survival Rate on the by GENDER")
library(tidyverse)
my.box <- ggplot(df,aes(x = Survived,y = Age))
my.box + geom_boxplot() +
labs(title = "Survival rate on the titanic based on the AGE")
my.box + geom_boxplot() +
labs(title = "Survival rate on the titanic based on the AGE") +
theme_light()
my.box + geom_boxplot() + geom_jitter(width = 0.2,aes(color = Sex))
my.box + geom_boxplot(outlier.colour = "red",outlier.shape = 4) +
geom_jitter(width = 0.2,aes(color = Sex))
sp <- ggplot(hdi,aes(CPI.2015,HDI.2015))
sp + geom_point(aes(color = Region))
sp + geom_point(aes(color = Region)) + theme_light()
sp + geom_point(aes(color = Region)) + theme_light() +
labs(x = "Corruption Percentage Index,2015",
y = "Human Development Index,2015",
title = "Corruption And Human Development")
sp + geom_point(aes(color = Region), shape = 21,
fill = "white",size = 3,stroke = 2) + theme_light() +
labs(x = "Corruption Percentage Index,2015",
y = "Human Development Index,2015",
title = "Corruption And Human Development")
sp + geom_point(aes(color = Region), shape = 21,
fill = "white",size = 3,stroke = 2) + theme_light() +
labs(x = "Corruption Percentage Index,2015",
y = "Human Development Index,2015",
title = "Corruption And Human Development") +
stat_smooth(se = F)
sp + geom_point(aes(color = Region), shape = 21,
fill = "white",size = 3,stroke = 2) + theme_light() +
labs(x = "Corruption Percentage Index,2015",
y = "Human Development Index,2015",
title = "Corruption And Human Development") +
stat_density2d()
col.1 <- c(1,1,2,4,5,6,7,8,9,3,6,5,8,4)
col.2 <- c(2,3,5,8,6,7,4,6,4,2,4,5,6,4)
col.3 <- c(8,9,7,5,6,4,1,2,3,4,5,6,7,9)
df <- data.frame(col.1,col.2,col.3)
library(tidyverse)
col.1 <- c(1,1,2,4,5,6,7,8,9,3,6,5,8,4)
col.2 <- c(2,3,5,8,6,7,4,6,4,2,4,5,6,4)
col.3 <- c(8,9,7,5,6,4,1,2,3,4,5,6,7,9)
df <- data.frame(col.1,col.2,col.3)
summary(df)
p1.1 <- ggplot(df,aes(x = col.1)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4")
p1.1 <- ggplot(df,aes(x = col.1)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Positive skewness")
p1.3 <- ggplot(df,aes(x = col.3)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Negative skewness")
pl.1 <- ggplot(df,aes(x = col.1)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Positive skewness")
pl.2 <- ggplot(df,aes(x = col.2)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Zero skewness")
pl.3 <- ggplot(df,aes(x = col.3)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Negative skewness")
pl.1
pl.2
pl.3
library(tidyverse)
hdi <- read.csv("G:/R PRAC UDEMY/hdi-cpi.csv",stringsAsFactors = F)
hdi <- as.tibble(hdi)
hdi
sc <- ggplot(hdi)
sc
sc <- ggplot(hdi,aes(CPI.2015,HDI.2015))
sc
sc+geom_point(aes(color = Region),size = 3) + stat_smooth() + theme_minimal()
#histogram using ggplot2
df <- read.csv("G:/R PRAC UDEMY/titanic.csv",stringsAsFactors = F)
df <- as.tibble(df)
df$Survived <- as.factor(df$Survived)
df$Pclass <- as.factor(df$Pclass)
df$Sex <- as.factor(df$Sex)
df$Embarked <- as.factor(df$Embarked)
df
hist <- ggplot(data = df,aes(x = Age))
hist + geom_histogram(binwidth = 5,color = "darkslategray",
fill = "darkslategray4",alpha = 0.5) +
ggtitle("Age distribution on the titanic") +
labs(x = "Age",y = "Number of passengers") +
theme_minimal()
library(tidyverse)
install.packages("ggthemes")
library(ggthemes)
emp <- read.csv("employee-data.csv", skip = 23, stringsAsFactors = FALSE)
emp <- as.tibble(emp)
emp$gender <- as.factor(emp$gender)
emp$title <- as.factor(emp$title)
emp.a <- filter(emp, salary > 45000)
hist <- ggplot(emp.a, aes(salary))
hist + geom_histogram(binwidth = 5000, color = "darkslategray",
fill = "darkseagreen2", alpha = 0.7) +
labs(title = "Salary distribution in the employee data",
x = "Salary", y = "Number of employees in the salary bracket") +
theme_solarized_2(light = FALSE, base_size = 15, base_family = "serif")
bar <- ggplot(df,aes(x = Sex,fill = Survived))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",
x = "Gender",
title = "Survival Rate on the by GENDER")
library(tidyverse)
my.box <- ggplot(df,aes(x = Survived,y = Age))
my.box + geom_boxplot(outlier.colour = "red",outlier.shape = 4) +
geom_jitter(width = 0.2,aes(color = Sex))
labs(title = "Survival rate on the titanic based on the AGE") +
theme_light()
sp <- ggplot(hdi,aes(CPI.2015,HDI.2015))
sp + geom_point(aes(color = Region), shape = 21,
fill = "white",size = 3,stroke = 2) + theme_light() +
labs(x = "Corruption Percentage Index,2015",
y = "Human Development Index,2015",
title = "Corruption And Human Development") +
stat_density2d()
library(tidyverse)
col.1 <- c(1,1,2,4,5,6,7,8,9,3,6,5,8,4)
col.2 <- c(2,3,5,8,6,7,4,6,4,2,4,5,6,4)
col.3 <- c(8,9,7,5,6,4,1,2,3,4,5,6,7,9)
df <- data.frame(col.1,col.2,col.3)
summary(df)
pl.1 <- ggplot(df,aes(x = col.1)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Positive skewness")
pl.2 <- ggplot(df,aes(x = col.2)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Zero skewness")
pl.3 <- ggplot(df,aes(x = col.3)) +
geom_histogram(binwidth = 1,color = "white",fill = "red4") +
theme_light() + labs("Negative skewness")
pl.1
pl.2
pl.3
s1 <- read.csv("G:/R PRAC UDEMY/skew_1.csv")
s2 <- read.csv("G:/R PRAC UDEMY/skew_2.csv")
skew1 <- ggplot(data = sk1, aes(x = `Dataset 1`))
skew1 + geom_histogram(binwidth = 100,
color = "darkslategray",
fill = "darkslategray4",
alpha = 0.5) +
theme_light()
skew1
skew2 <- ggplot(data = sk2, aes(x = `Dataset 2`))
skew2 + geom_histogram(binwidth = 100,
color = "darkslategray",
fill = "darkslategray4",
alpha = 0.5) +
theme_light()
skew2
library(tidyverse)
ny <- c(1,2,3,3,5,6,7,8,9,11)
la <- c(1,2,3,4,5,6,7,8,9,10)
pizza <- data_frame(ny,la)
pizza$ny.mxn <- c(18.81,37.62,56.43,56.43,94.05,112.86,131.67,150.48,169.29,206.91)
pizza
lapply(pizza,mean)
sapply(pizza,mean)
sapply(pizza,var)
sapply(pizza, sd)
coef.var <- sapply(pizza, sd) / sapply(pizza,mean)
coef.var
library(tidyverse)
ny <- c(1,2,3,3,5,6,7,8,9,11)
la <- c(1,2,3,4,5,6,7,8,9,10)
pizza <- data_frame(ny,la)
pizza$ny.mxn <- c(18.81,37.62,56.43,56.43,94.05,112.86,131.67,150.48,169.29,206.91)
pizza
lapply(pizza,mean)
sapply(pizza,mean)
sapply(pizza,var)
sapply(pizza, sd)
coef.var <- sapply(pizza, sd) / sapply(pizza,mean)
coef.var
homes <- read.csv("G:/R PRAC UDEMY/land_data-states.csv",stringsAsFactors = F)
homes <- as.tibble(homes)
homes %>% subset(Date == 2001.25) %>% ggplot(aes(y = Structure.Cost,
x = log(Land.Value))) +
geom_point() + theme_light() + labs(x = "Land Value (transfered)",
y = "Structure Cost (USD)",
title = "Reltionship between land value and structure cost")
cor(homes$Structure.Cost,homes$Land.Value)
cor.test(homes$Structure.Cost,homes$Land.Value)
library(psych)
rate <- read.csv("G:/R PRAC UDEMY/ttest-a.csv")
rate
describe(rate)
t <- (mean(a)-hmean) / (sd(a)/sqrt(length(a)))
return(t)
my.t.test <- function(a,hmean){
t <- (mean(a)-hmean) / (sd(a)/sqrt(length(a)))
return(t)
}
my.t.test(rate$Open.rate,0.4)
library(pastecs)
magn <- read.csv("G:\R PRAC UDEMY\dependant-samples.csv")
magn <- read.csv("G:/R PRAC UDEMY/dependant-samples.csv")
magn
dep.t.test <- t.test(magn$Before,magn$After,paired = T,alternative = "l")
dep.t.test
stat.desc(magn)
grades <- read.csv("G:/R PRAC UDEMY/independent-samples.csv")
grades <- read.csv("G:/R PRAC UDEMY/independent-samples.csv")
grades
grades <- read.csv("G:/R PRAC UDEMY/independent-samples.csv")
grades
grades <- gather(grades,Engineering,Management,
key = "course",
value = "grades")
grades
ind.t.test <- t.test(gardes~course,data = grades,mu = -4)
ind.t.test
grades <- read_csv("independent-samples.csv")
ind.t.test <- t.test(grades$Engineering, grades$Management, mu=-4)
ind.t.test
college
setwd("G:/R PRAC UDEMY")
college <- read.csv("G:/R PRAC UDEMY/regression-example.csv")
college
desc::desc_del_collate()
describe(college)
linmod <- lm(GPA ~ SAT,data = college)
library(ggplot2)
ggplot(college,aes(SAT,GPA)) +
geom_point() +
theme_light() +
labs(x = "SAT Scores",
y = "GPA Scores",
title = "SAT and GPA")
summary(linmod)
ggplot(college,aes(SAT,GPA)) +
geom_point() +
theme_light() +
labs(x = "SAT Scores",
y = "GPA Scores",
title = "SAT and GPA") +
stat_smooth(method = "lm",se = F)
library(tidyverse)
data
data <- read.csv("G:/R PRAC UDEMY/real_estate_price_size_year_view.csv")
data
point <- format_format(big.mark = " ", decimal.mark = ",", scientific = FALSE) # this helps us get rid of the scientific notation in the graph
ggplot(data, aes(price, size)) +
geom_point() +
theme_light() +
labs(x = "House price (in USD)",
y = "House size (in sq ft)",
title = "House pricing and size") +
scale_x_continuous(labels = point) +
scale_y_continuous(labels = point)
point <- format_format(big.mark = " ", decimal.mark = ",", scientific = FALSE)
ggplot(data, aes(price, size)) +
geom_point() +
theme_light() +
labs(x = "House price (in USD)",
y = "House size (in sq ft)",
title = "House pricing and size") +
scale_x_continuous(labels = point) +
scale_y_continuous(labels = point)
ggplot(data, aes(price, size)) +
geom_point() +
theme_light() +
labs(x = "House price (in USD)",
y = "House size (in sq ft)",
title = "House pricing and size") +
scale_x_continuous(labels = point) +
scale_y_continuous(labels = point)
ggplot(data, aes(price, size)) +
geom_point() +
theme_light() +
labs(x = "House price (in USD)",
y = "House size (in sq ft)",
title = "House pricing and size") +
scale_x_continuous(labels = point) +
scale_y_continuous(labels = point)
ggplot(data, aes(price, size)) +
geom_point() +
theme_light() +
labs(x = "House price (in USD)",
y = "House size (in sq ft)",
title = "House pricing and size")
linmod <- lm(price ~ size,data = data)
ggplot(data, aes(price, size)) +
geom_point() +
theme_light() +
labs(x = "House price (in USD)",
y = "House size (in sq ft)",
title = "House pricing and size")  +
stat_smooth(method = "lm",se = F)
summary(linmod)
